// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model alergias {
  cod_alergias   Int           @id @default(autoincrement())
  alergias       String        @unique@db.VarChar(60)
  fk_cod_usuario  usuario[]

}

model comorbidade {
  cod_comorbidade Int     @id @default(autoincrement())
  comorbidade     String  @unique@db.VarChar(60)
  fk_cod_usuario  usuario[]
}

model contatoemergencia {
  cod_contatoemergencia  Int     @id @default(autoincrement())
  nomecontatoemergencia  String? @db.VarChar(40)
  emailcontatoemergencia String? @db.VarChar(60)
  telefoneemergencia     String? @db.VarChar(40)
  fk_cod_usuario         String  @unique
  usuario                usuario @relation(fields: [fk_cod_usuario], references: [cod_usuario], onDelete: Cascade)
}

model doadororgao {
  cod_doadororgao Int     @id @default(autoincrement())
  doadororgao     String? @db.VarChar(20)
  fk_cod_usuario  String  @unique
  usuario         usuario @relation(fields: [fk_cod_usuario], references: [cod_usuario], onDelete: Cascade)
}

model doadorsangue {
  cod_doadorsangue Int     @id @default(autoincrement())
  doadorsangue     String? @db.VarChar(20)
  fk_cod_usuario   String   @unique
  usuario          usuario @relation(fields: [fk_cod_usuario], references: [cod_usuario], onDelete: Cascade)
}

model endereco {
  logradouro     String? @db.VarChar(60)
  numerocasa     Int?
  cep            String?
  fk_cod_usuario String  @unique
  usuario        usuario @relation(fields: [fk_cod_usuario], references: [cod_usuario], onDelete: Cascade)
}


model telefone {
  numero         String?
  fk_cod_usuario String  @unique
  usuario        usuario @relation(fields: [fk_cod_usuario], references: [cod_usuario], onDelete: Cascade)
}

model tratamento {
  cod_tratamento String  @id
  enfermidade    String? @db.VarChar(60)
  periodo        String? @db.VarChar(60)
  droga          String? @db.VarChar(60)
  fk_cod_usuario String  @unique
  usuario        usuario @relation(fields: [fk_cod_usuario], references: [cod_usuario], onDelete: Cascade)
}

model usuario {
  cod_usuario       String              @id @unique @default(uuid())
  nome              String?              @db.VarChar(40)
  tiposanguineo     String?             @db.VarChar(10)
  idade             Int?
  email             String             @unique @db.VarChar(40)
  senha             String            @db.VarChar(40)
  comorbidade       comorbidade[]
  contatoemergencia contatoemergencia?
  doadororgao       doadororgao?
  doadorsangue      doadorsangue?
  endereco          endereco?
  alergia           alergias[]
  telefone          telefone?
  tratamento        tratamento?

}
